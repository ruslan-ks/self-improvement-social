DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE users
(
    id            bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name          text        NOT NULL
        CONSTRAINT valid_user_name_length CHECK (length(name) >= 2 AND length(name) <= 128),
    surname       text
        CONSTRAINT valid_user_surname_length CHECK (length(surname) >= 2 AND length(surname) <= 128),
    email         text UNIQUE NOT NULL
        CONSTRAINT valid_user_email_length CHECK (length(email) >= 3 AND length(email) <= 128),
    password      text        NOT NULL,
    birthday      date,
    role          text        NOT NULL DEFAULT 'USER',
    status        text        NOT NULL DEFAULT 'ACTIVE',
    registered_at timestamptz NOT NULL DEFAULT now()
);

-- M:M
DROP TABLE IF EXISTS user_followings CASCADE;
CREATE TABLE user_followings
(
    user_id      bigint NOT NULL REFERENCES users (id)
        ON DELETE CASCADE,
    following_id bigint NOT NULL REFERENCES users (id)
        ON DELETE CASCADE,
    CONSTRAINT user_id_not_equals_following_id CHECK (user_id <> following_id),
    CONSTRAINT unique_user_following UNIQUE (user_id, following_id)
);

DROP TABLE IF EXISTS activities CASCADE;
CREATE TABLE activities
(
    id               bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name             text NOT NULL
        CONSTRAINT valid_activity_name_length CHECK (length(name) >= 2 AND length(name) <= 256),
    description      text NOT NULL
        CONSTRAINT valid_activity_title_length CHECK (length(description) >= 2 AND length(description) <= 256),
    minutes_required int  NOT NULL
        CONSTRAINT positive_activity_minutes_required CHECK (minutes_required > 0),
    author_id        bigint,
    FOREIGN KEY (author_id) REFERENCES users (id)
        ON DELETE SET NULL
);

DROP TABLE IF EXISTS repetitive_activities CASCADE;
CREATE TABLE repetitive_activities
(
    activity_id      bigint PRIMARY KEY,
    period_type      text NOT NULL DEFAULT 'NO_PERIOD',
    times_per_period int,
    FOREIGN KEY (activity_id) REFERENCES activities (id)
        ON DELETE CASCADE
);

DROP TABLE IF EXISTS categories CASCADE;
CREATE TABLE categories
(
    id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name TEXT NOT NULL
        CONSTRAINT valid_category_name_length CHECK (length(name) >= 2 AND length(name) <= 128)
);

-- M:M
DROP TABLE IF EXISTS activity_categories CASCADE;
CREATE TABLE activity_categories
(
    activity_id bigint NOT NULL REFERENCES activities (id)
        ON DELETE CASCADE,
    category_id bigint NOT NULL REFERENCES categories (id)
        ON DELETE CASCADE,
    CONSTRAINT unique_activity_category UNIQUE (activity_id, category_id)
);

-- M:M
DROP TABLE IF EXISTS user_activities CASCADE;
CREATE TABLE user_activities
(
    id          bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id     bigint      NOT NULL REFERENCES users (id)
        ON DELETE CASCADE,
    activity_id bigint      NOT NULL REFERENCES activities (id)
        ON DELETE CASCADE,
    started_at  timestamptz NOT NULL DEFAULT now(),
    CONSTRAINT unique_user_activity UNIQUE (user_id, activity_id)
);

DROP TABLE IF EXISTS user_activities_completions CASCADE;
CREATE TABLE user_activities_completions
(
    id               bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_activity_id bigint      NOT NULL REFERENCES user_activities (id)
        ON DELETE CASCADE,
    completed_at     timestamptz NOT NULL DEFAULT now()
);

INSERT INTO users(name, email, password, role)
VALUES ('Root', 'root@root.com', '$2a$10$Vnz906hKibvdKesDSmalbec2UkOMVaR05XKnFxULWD5kAj6oX.vXG', 'ROOT');

INSERT INTO activities(name, description, minutes_required, author_id)
VALUES ('Coding', 'Write code', 60, 1),
       ('Cooking', 'Make a dish', 45, 1),
       ('Learning english', 'Just learn it', 120, 1);

INSERT INTO repetitive_activities(activity_id, period_type, times_per_period)
VALUES (1, 'DAILY', 1);

INSERT INTO user_activities(user_id, activity_id)
VALUES (1, 1),
       (1, 2);

INSERT INTO user_activities_completions(user_activity_id)
VALUES (1),
       (1),
       (1);

-- 1.repetitive activity type:
-- daily,
-- weekly,
-- monthly
-- (once a day/week/month)
--
-- 2.repetitive activity type:
--     every day day at N o'clock - list of time
--     every week on sunday/munday... - list of week day number (+ time)
--     every Nd(first, second, third...) day of month - list of month day number
